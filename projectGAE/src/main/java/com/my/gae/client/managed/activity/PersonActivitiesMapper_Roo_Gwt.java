// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package com.my.gae.client.managed.activity;

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.my.gae.client.managed.request.ApplicationRequestFactory;
import com.my.gae.client.managed.ui.PersonDetailsView;
import com.my.gae.client.managed.ui.PersonEditView;
import com.my.gae.client.managed.ui.PersonListView;
import com.my.gae.client.managed.ui.PersonMobileDetailsView;
import com.my.gae.client.managed.ui.PersonMobileEditView;
import com.my.gae.client.proxy.PersonProxy;
import com.my.gae.client.request.PersonRequest;
import com.my.gae.client.scaffold.ScaffoldApp;
import com.my.gae.client.scaffold.place.CreateAndEditProxy;
import com.my.gae.client.scaffold.place.FindAndEditProxy;
import com.my.gae.client.scaffold.place.ProxyPlace;

public abstract class PersonActivitiesMapper_Roo_Gwt {

    protected ApplicationRequestFactory requests;

    protected PlaceController placeController;

    protected Activity makeCreateActivity() {
        PersonEditView.instance().setCreating(true);
        final PersonRequest request = requests.personRequest();
        Activity activity = new CreateAndEditProxy<PersonProxy>(PersonProxy.class, request, ScaffoldApp.isMobile() ? PersonMobileEditView.instance() : PersonEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(PersonProxy proxy) {
                request.persist().using(proxy);
                return request;
            }
        };
        return new PersonEditActivityWrapper(requests, ScaffoldApp.isMobile() ? PersonMobileEditView.instance() : PersonEditView.instance(), activity, null);
    }

    @SuppressWarnings("unchecked")
    protected EntityProxyId<com.my.gae.client.proxy.PersonProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<PersonProxy>) place.getProxyId();
    }

    protected Activity makeEditActivity(ProxyPlace place) {
        PersonEditView.instance().setCreating(false);
        EntityProxyId<PersonProxy> proxyId = coerceId(place);
        Activity activity = new FindAndEditProxy<PersonProxy>(proxyId, requests, ScaffoldApp.isMobile() ? PersonMobileEditView.instance() : PersonEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(PersonProxy proxy) {
                PersonRequest request = requests.personRequest();
                request.persist().using(proxy);
                return request;
            }
        };
        return new PersonEditActivityWrapper(requests, ScaffoldApp.isMobile() ? PersonMobileEditView.instance() : PersonEditView.instance(), activity, proxyId);
    }
}
